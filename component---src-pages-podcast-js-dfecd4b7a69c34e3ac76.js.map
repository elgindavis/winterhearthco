{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/pages/podcast.js"],"names":["$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","url","this","LinksDiv","styled","div","SingleLink","a","EmbeddedEpisode","data","site","siteMetadata","anchorUrl","anchorSupportUrl","anchorMessageUrl","spotifyUrl","applePodcastsUrl","googlePodcastsUrl","breakerUrl","castboxUrl","overcastUrl","pocketCastsUrl","radioPublicUrl","podcastTwitterShareUrl","podcastFacebookShareUrl","useState","podcastRssFeed","setPodcastRssFeed","useEffect","request","document","title","XMLHttpRequest","onreadystatechange","readyState","status","feed","JSON","parse","responseText","items","map","episode","link","open","send","className","style","paddingBottom","href","target","rel","marginBottom","display","justifyContent","padding","width","maxWidth","key","frameBorder","height","scrolling","src","query"],"mappings":"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","file":"component---src-pages-podcast-js-dfecd4b7a69c34e3ac76.js","sourcesContent":["var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","import styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\nimport React, { useEffect, useState } from 'react';\n\nimport {\n  Layout,\n  Separator,\n} from \"../components\";\n\nconst LinksDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  @media (max-width: 768px) {\n    justify-content: space-around;\n  }\n  @media (max-width: 450px) {\n    justify-content: flex-start;\n  }\n  padding-top: 8px;\n`;\n\nconst SingleLink = styled.a`\n  font-size: 14px;\n  margin-right: 12px;\n  margin-bottom: 12px;\n  @media (max-width: 400px) {\n    font-size: 16px;\n  }\n`;\n\nconst EmbeddedEpisode = styled.div`\n  padding-bottom: 0px;\n  @media(min-width: 991px) {\n    padding-bottom: 40px\n  }\n`;\n\nexport default ({ \n  data: { \n    site: { \n      siteMetadata: {\n        anchorUrl,\n        anchorSupportUrl,\n        anchorMessageUrl,\n        spotifyUrl,\n        applePodcastsUrl,\n        googlePodcastsUrl,\n        breakerUrl,\n        castboxUrl,\n        overcastUrl,\n        pocketCastsUrl,\n        radioPublicUrl,\n        podcastTwitterShareUrl,\n        podcastFacebookShareUrl\n      }\n    }\n  }\n}) => {\n    const [podcastRssFeed, setPodcastRssFeed] = useState(null);\n   \n    const getRssFeed = () => {\n      const request = new XMLHttpRequest();\n      request.onreadystatechange = () => {\n        if (request.readyState === 4 && request.status === 200) {\n          const { items } = JSON.parse(request.responseText);\n          const feed = items.map(episode => {\n            return {\n              ...episode,\n              link: episode.link.replace(/episodes/i, \"embed/episodes\")\n            }\n          });\n          setPodcastRssFeed(feed);\n         \n        }\n      }\n      request.open(\"GET\", \"https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Fanchor.fm%2Fs%2Fdb39ae0%2Fpodcast%2Frss\", true);\n      request.send();\n    }\n  \n    useEffect(() => {\n        document.title = \"More Human Podcast | Winter Hearth Studios\";\n        getRssFeed();\n    }, []);\n    \n    \n    return (\n      <Layout>\n        <section className=\"recent-blog-area pt-120\">\n          <div className=\"container\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-md-12 pt-30 pb-30 center\">\n                <h1>More Human Podcast</h1>\n                <Separator style={{ paddingBottom: 0 }} />\n                <LinksDiv style={{ paddingBottom: 24 }}>\n                  {anchorSupportUrl && (\n                    <SingleLink\n                      href={anchorSupportUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Support the podcast\n                    </SingleLink>\n                  )}\n                  {anchorMessageUrl && (\n                    <SingleLink\n                      href={anchorMessageUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Leave a message\n                    </SingleLink>\n                  )}\n                  {podcastFacebookShareUrl && (\n                    <SingleLink\n                      href={podcastFacebookShareUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Share on Facebook\n                    </SingleLink>\n                  )}\n                  {podcastTwitterShareUrl && (\n                    <SingleLink\n                      href={podcastTwitterShareUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Share on Twitter\n                    </SingleLink>\n                  )}\n                </LinksDiv>\n                <div>\n                  <p style={{ marginBottom: 24 }} > Available on:</p>\n                  <LinksDiv>\n                    {applePodcastsUrl && (\n                      <SingleLink\n                        href={applePodcastsUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                         Apple Podcasts\n                      </SingleLink>\n                    )}\n                    {googlePodcastsUrl && (\n                      <SingleLink\n                        href={googlePodcastsUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                         Google Podcasts\n                      </SingleLink>\n                    )}\n                    {spotifyUrl && (\n                      <SingleLink\n                        href={spotifyUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                         Spotify\n                      </SingleLink>\n                    )}\n                    {anchorUrl && (\n                      <SingleLink\n                        href={anchorUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                         Anchor\n                      </SingleLink>\n                    )}\n                    {radioPublicUrl && (\n                      <SingleLink\n                        href={radioPublicUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                         Radio Public\n                      </SingleLink>\n                    )}\n                    {pocketCastsUrl && (\n                      <SingleLink\n                        href={pocketCastsUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                         Pocket Casts\n                      </SingleLink>\n                    )}\n                    {castboxUrl && (\n                      <SingleLink\n                        href={castboxUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                         CastBox\n                      </SingleLink>\n                    )}\n                    {breakerUrl && (\n                      <SingleLink\n                        href={breakerUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                         Breaker\n                      </SingleLink>\n                    )}\n                    {overcastUrl && (\n                      <SingleLink\n                        href={overcastUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                         Overcast\n                      </SingleLink>\n                    )}\n                  </LinksDiv>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        {podcastRssFeed ? \n          <section>\n            <div className=\"container\" style={{ display: 'flex', justifyContent: 'center' }}>\n              <div style={{ padding: 20, width: '100%', maxWidth: 1000 }}>\n                {podcastRssFeed.map(episode => {\n                    return (\n                      <EmbeddedEpisode key={episode.title}>\n                        <h3 style={{ paddingBottom: 12 }}>{episode.title}</h3>\n                        <iframe\n                          frameBorder=\"0\"\n                          height=\"160\"\n                          scrolling=\"no\"\n                          title={episode.title}\n                          src={episode.link}\n                          width=\"100%\"\n                        />\n                      </EmbeddedEpisode>\n                    )\n                  })}\n              </div>\n            </div>\n          </section>\n          :\n          <div className=\"container\" style={{ display: 'flex', justifyContent: 'center' }}>\n            <p>Loading...</p>\n          </div>\n        }\n      </Layout>\n    );\n};\n\n// This gets the { data } property onto our props parameter, and here we query for all markdown files\nexport const query = graphql`\n    query {\n      site {\n        siteMetadata {\n          anchorUrl\n          anchorSupportUrl\n          spotifyUrl\n          applePodcastsUrl\n          googlePodcastsUrl\n          breakerUrl\n          castboxUrl\n          overcastUrl\n          pocketCastsUrl\n          radioPublicUrl\n          podcastTwitterShareUrl\n          podcastFacebookShareUrl\n        }\n      }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            totalCount\n            edges {\n                node {\n                    id\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    ...PostInfo\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}