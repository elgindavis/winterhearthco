{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["edges","data","allMarkdownRemark","allPosts","transformPostQueryData","latestPostList","slice","reverse","filter","post","hidden","useState","searchState","setSearchState","filteredPostList","setPostList","useEffect","document","title","style","padding","className","margin","paintDrip","hex","direction","to","paddingBottom","type","posts","length","name","justifyContent","list","id","query"],"mappings":"2FAAA,mHAQe,sBAIR,IAFkBA,EAEnB,EAHJC,KACEC,kBAAqBF,MAGjBG,EAAWC,YAAuBJ,GAClCK,EAAiBF,EACpBG,OAAO,GACPC,UACAC,QAAO,SAACC,GAAD,OAA0B,IAAhBA,EAAKC,UALrB,EAOkCC,mBAAS,IAAxCC,EAPH,KAOgBC,EAPhB,OAQoCF,mBAAS,IAA1CG,EARH,KAQqBC,EARrB,KAcJ,OAJAC,qBAAU,WACRC,SAASC,MAAQ,0BAChB,IAGD,kBAAC,IAAD,KACE,6BACEC,MAAO,CAAEC,QAAS,SAClBC,UAAU,+BAEV,yBAAKA,UAAU,IACb,yBACEF,MAAO,CAAEG,OAAQ,gBACjBD,UAAU,6DAEV,yBAAKA,UAAU,iCACb,wBAAIA,UAAU,cAAd,qBACoB,6BADpB,qBAIA,4FAGA,kBAAC,IAAD,CACEE,WAAS,EACTC,IAAI,UACJC,UAAU,KACVC,GAAG,SACHL,UAAU,8BALZ,wBAcR,6BACEF,MAAO,CAAEQ,cAAe,GACxBN,UAAU,gCAEV,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,qCACb,8CACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEN,YAAaA,EACbF,eAAgBA,EAChBe,KAAK,YACLC,MAAO1B,MAIb,yBAAKkB,UAAU,SACI,KAAhBT,GACC,wBAAIS,UAAU,SAAd,gBAAoCT,GAErB,KAAhBA,GAAkD,IAA5BE,EAAiBgB,QACtC,2DAEF,yBACEC,KAAK,wBACLV,UAAU,MACVF,MAAO,CAAEa,eAAgB,WAER,KAAhBpB,GACC,kBAAC,IAAD,CAAkBqB,KAAMnB,MAIb,KAAhBF,GACC,6BACE,2CADF,IACuB,8BAGzB,yBACEsB,GAAG,mBACHb,UAAU,MACVF,MAAO,CAAEa,eAAgB,WAEzB,kBAAC,IAAD,CAAkBC,KAAM5B,OAK9B,6BAASgB,UAAU,eACjB,yBAAKA,UAAU,eACb,8BACE,kBAAC,IAAD,CACEE,WAAS,EACTC,IAAI,UACJC,UAAU,KACVN,MAAO,CAAEG,OAAQ,aACjBI,GAAG,SACHK,KAAK,uBACLV,UAAU,8BAPZ,iBAWA,kBAAC,IAAD,CACEE,WAAS,EACTC,IAAI,UACJC,UAAU,KACVN,MAAO,CAAEG,OAAQ,aACjBI,GAAG,gBACHK,KAAK,6BACLV,UAAU,8BAPZ,wBAmBL,IAAMc,EAAK","file":"component---src-pages-index-js-4fc7fcfa2bfe506aacdd.js","sourcesContent":["import AniLink from \"gatsby-plugin-transition-link/AniLink\";\nimport { graphql } from \"gatsby\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { Layout, Separator, SearchArea, PostGridItemList } from \"../components\";\n\nimport { transformPostQueryData } from \"../utils\";\n\nexport default ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const allPosts = transformPostQueryData(edges);\n  const latestPostList = allPosts\n    .slice(-9)\n    .reverse()\n    .filter((post) => post.hidden !== true);\n\n  const [searchState, setSearchState] = useState(\"\");\n  const [filteredPostList, setPostList] = useState([]);\n\n  useEffect(() => {\n    document.title = \"Winter Hearth Studios\";\n  }, []);\n\n  return (\n    <Layout>\n      <section\n        style={{ padding: \"12% 0\" }}\n        className=\"home-hero-image section-gap\"\n      >\n        <div className=\"\">\n          <div\n            style={{ margin: \"10% 0% 0% 3%\" }}\n            className=\"row align-items-center justify-content-between text-white\"\n          >\n            <div className=\"col-lg-8 col-md-8 banner-left\">\n              <h1 className=\"text-white\">\n                Change the heart, <br />\n                change the world.\n              </h1>\n              <p>\n                We're Winter Hearth Studios, and we're just getting fired up.\n              </p>\n              <AniLink\n                paintDrip\n                hex=\"#f0f8ff\"\n                direction=\"up\"\n                to=\"/blog/\"\n                className=\"primary-btn text-uppercase\"\n              >\n                See Latest Posts\n              </AniLink>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section\n        style={{ paddingBottom: 0 }}\n        className=\"recent-blog-area section-gap\"\n      >\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-12 text-center header-text\">\n              <h1>Latest content</h1>\n              <Separator />\n              <SearchArea\n                setPostList={setPostList}\n                setSearchState={setSearchState}\n                type=\"all posts\"\n                posts={allPosts}\n              />\n            </div>\n          </div>\n          <div className=\"pb-40\">\n            {searchState !== \"\" && (\n              <h3 className=\"pb-40\">Results for: {searchState}</h3>\n            )}\n            {searchState !== \"\" && filteredPostList.length === 0 && (\n              <p>No posts matched this search</p>\n            )}\n            <div\n              name=\"searched-post-section\"\n              className=\"row\"\n              style={{ justifyContent: \"center\" }}\n            >\n              {searchState !== \"\" && (\n                <PostGridItemList list={filteredPostList} />\n              )}\n            </div>\n          </div>\n          {searchState !== \"\" && (\n            <div>\n              <h2>Most Recent</h2> <br />\n            </div>\n          )}\n          <div\n            id=\"latest-posts-row\"\n            className=\"row\"\n            style={{ justifyContent: \"center\" }}\n          >\n            <PostGridItemList list={latestPostList} />\n          </div>\n        </div>\n      </section>\n\n      <section className=\"pt-80 pb-80\">\n        <div className=\"text-center\">\n          <span>\n            <AniLink\n              paintDrip\n              hex=\"#f0f8ff\"\n              direction=\"up\"\n              style={{ margin: \"12px 16px\" }}\n              to=\"/blog/\"\n              name=\"see-all-blogs-button\"\n              className=\"primary-btn text-uppercase\"\n            >\n              See All Blogs\n            </AniLink>\n            <AniLink\n              paintDrip\n              hex=\"#f0f8ff\"\n              direction=\"up\"\n              style={{ margin: \"12px 16px\" }}\n              to=\"/newsletters/\"\n              name=\"see-all-newsletters-button\"\n              className=\"primary-btn text-uppercase\"\n            >\n              See Newsletters\n            </AniLink>\n          </span>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\n// This gets the { data } property onto our props parameter, and here we query for all markdown files\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: ASC }) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          ...PostInfo\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}