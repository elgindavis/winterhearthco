{"version":3,"sources":["webpack:///./src/utils/index.js","webpack:///./src/pages/podcast.js"],"names":["transformPostQueryData","postList","map","post","data","node","id","excerpt","frontmatter","date","title","articleLink","fields","slug","featured","newsletterVolume","contentType","imageUrl","imageAlt","tags","keywords","description","author","edges","allMarkdownRemark","allEpisodes","filter","content","url","className","style","textAlign","edition","key","articleTitle","imgAltText","query"],"mappings":"8FAAA,gDAEaA,EAAyB,SAACC,GACnC,OAAOA,EAASC,KAAI,SAAAC,GAChB,IAAMC,EAAOD,EAAKE,KAClB,MAAO,CACHC,GAAIF,EAAKE,GACTC,QAASH,EAAKG,QACdC,YAAaJ,EAAKI,YAClBC,KAAML,EAAKI,YAAYC,KACvBC,MAAON,EAAKI,YAAYE,MACxBC,YAAaP,EAAKQ,OAAOC,KACzBC,SAAUV,EAAKI,YAAYM,SAC3BC,iBAAkBX,EAAKI,YAAYO,iBACnCC,YAAaZ,EAAKI,YAAYQ,YAC9BC,SAAUb,EAAKI,YAAYS,SAC3BC,SAAUd,EAAKI,YAAYU,SAC3BC,KAAMf,EAAKI,YAAYW,KACvBC,SAAUhB,EAAKI,YAAYY,SAC3BC,YAAajB,EAAKI,YAAYa,YAC9BC,OAAQlB,EAAKI,YAAYc,a,kCCpBrC,8FAMe,sBAAiD,IAAjBC,EAAgB,EAA7CnB,KAAQoB,kBAAqBD,MACrCE,EAAczB,YAAuBuB,GAAOG,QAC9C,SAAAC,GAAO,MAA4B,YAAxBA,EAAQX,eAEvB,OACI,kBAAC,IAAD,CACII,SAAU,oEACVH,SAAS,+BACTC,SAAS,8BACTU,IAAI,kCACJlB,MAAM,QACNW,YAAY,wCAEZ,6BAASQ,UAAU,2BACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,sCACX,oEACA,wBAAIC,MAAO,CAAEC,UAAW,WAAxB,4CAGR,yBAAKF,UAAU,aAEPJ,EAAYvB,KAAI,SAAC8B,GACb,OACI,kBAAC,IAAD,CACIC,IAAKD,EAAQ1B,GACbgB,OAAQU,EAAQV,OAChBb,KAAMuB,EAAQvB,KACdyB,aAAcF,EAAQtB,MACtBO,SAAUe,EAAQf,SAClBN,YAAaqB,EAAQrB,YACrBwB,WAAYH,EAAQG,WACpB5B,QAASyB,EAAQX,sBAclD,IAAMe,EAAK","file":"component---src-pages-podcast-js-64c000105e5eef1a1b01.js","sourcesContent":["import React from 'react';\n\nexport const transformPostQueryData = (postList) => {\n    return postList.map(post => {\n        const data = post.node;\n        return {\n            id: data.id,\n            excerpt: data.excerpt,\n            frontmatter: data.frontmatter,\n            date: data.frontmatter.date,\n            title: data.frontmatter.title,\n            articleLink: data.fields.slug,\n            featured: data.frontmatter.featured,\n            newsletterVolume: data.frontmatter.newsletterVolume,\n            contentType: data.frontmatter.contentType,\n            imageUrl: data.frontmatter.imageUrl,\n            imageAlt: data.frontmatter.imageAlt,\n            tags: data.frontmatter.tags,\n            keywords: data.frontmatter.keywords,\n            description: data.frontmatter.description,\n            author: data.frontmatter.author,\n        }\n    });\n};\n\nexport const setPostTags = (tags) => {\n    return tags.map((tag, index) => {\n        return index !== tags.length - 1 ? (\n            <li key={index}>{tag},&nbsp;</li>\n        ) : (\n                <li key={index}>{tag}</li>\n            );\n    });\n};\n","import React from 'react';\nimport { graphql } from \"gatsby\";\n\nimport { PostGridItem, Layout } from \"../components\";\nimport { transformPostQueryData } from \"../utils\";\n\nexport default ({ data: { allMarkdownRemark: { edges } } }) => {\n    const allEpisodes = transformPostQueryData(edges).filter(\n        content => content.contentType === 'podcast'\n    );\n    return (\n        <Layout\n            keywords={\"podcast, feeling human, emotions, mental health, emotional health\"}\n            imageUrl=\"/img/aubbie-crystal-ball.png\"\n            imageAlt=\"Winter Hearth Studios Games\"\n            url=\"https://winterhearth.co/podcast\"\n            title=\"Games\"\n            description=\"Welcome to the Winter Hearth Arcade!\"\n        >\n            <section className=\"recent-blog-area pt-120\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-12 pb-30 header-text center\">\n                            <h1>Welcome to the Feeling Human Podcast</h1>\n                            <h3 style={{ textAlign: \"center\" }}>When was the last time you felt human?</h3>\n                        </div>\n                    </div>\n                    <div className=\"row pt-40\">\n                        {\n                            allEpisodes.map((edition) => {\n                                return (\n                                    <PostGridItem\n                                        key={edition.id}\n                                        author={edition.author}\n                                        date={edition.date}\n                                        articleTitle={edition.title}\n                                        imageUrl={edition.imageUrl}\n                                        articleLink={edition.articleLink}\n                                        imgAltText={edition.imgAltText}\n                                        excerpt={edition.description}\n                                    ></PostGridItem>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n            </section>\n\n        </Layout>\n    )\n};\n\n// This gets the { data } property onto our props parameter, and here we query for all markdown files\nexport const query = graphql`\n    query {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            totalCount\n            edges {\n                node {\n                    id\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    ...PostInfo\n                }\n            }\n        }\n    }\n`;"],"sourceRoot":""}