{"version":3,"sources":["webpack:///./src/utils/index.js","webpack:///./src/pages/blog.js"],"names":["transformPostQueryData","postList","map","post","data","node","id","excerpt","frontmatter","date","title","articleLink","fields","slug","featured","newsletterVolume","contentType","imageUrl","imageAltText","tags","keywords","description","author","getBorderStyle","index","edges","allMarkdownRemark","allPosts","allBlogs","filter","featuredPostList","featuredColumnList","newsletterVolTwoList","useState","searchState","setSearchState","filteredPostList","setPostList","url","articleTitle","articleDescription","mobileimageUrl","className","posts","type","style","marginTop","name","length","edition","color","key","margin","width","borderRadius","src","alt","textAlign","paintDrip","direction","to","query"],"mappings":"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","file":"component---src-pages-blog-js-c31cc22489a82adb803c.js","sourcesContent":["export const transformPostQueryData = (postList) => {\n    return postList.map(post => {\n        const data = post.node;\n        return {\n            id: data.id,\n            excerpt: data.excerpt,\n            frontmatter: data.frontmatter,\n            date: data.frontmatter.date,\n            title: data.frontmatter.title,\n            articleLink: data.fields.slug,\n            featured: data.frontmatter.featured,\n            newsletterVolume: data.frontmatter.newsletterVolume,\n            contentType: data.frontmatter.contentType,\n            imageUrl: data.frontmatter.imageUrl,\n            imageAltText: data.frontmatter.imageAltText,\n            tags: data.frontmatter.tags,\n            keywords: data.frontmatter.keywords,\n            description: data.frontmatter.description,\n            author: data.frontmatter.author,\n        }\n    });\n};\n\nexport const getBorderStyle = (index) => {\n  switch (index % 3) {\n    case 0:\n      return \"primary\";\n    case 1:\n      return \"yellow\";\n    case 2:\n      return \"secondary\";\n    default:\n      return;\n  }\n};\n","import React, { useState } from \"react\";\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\";\nimport { graphql } from \"gatsby\";\n\nimport {\n    Layout, \n    Separator,\n    SearchArea,\n    PostGridItem,\n    SinglePostRow,\n    BannerBlogItem,\n    PopularPostColumn,\n} from \"../components\";\n\nimport { transformPostQueryData, getBorderStyle } from \"../utils\";\n\nexport default ({ data: { allMarkdownRemark: { edges } }}) => {\n    const allPosts = transformPostQueryData(edges);\n    const allBlogs = allPosts.filter(\n      (post) => post.contentType === \"blog\"\n    ); \n    const featuredPostList = allBlogs.filter(\n      (post) => post.featured === true\n    );\n    const featuredColumnList = allPosts.filter(\n      (post) => post.featured === true\n    );\n    const newsletterVolTwoList = allPosts.filter(post => post.newsletterVolume === \"2\");\n    const [searchState, setSearchState] = useState('');\n    const [filteredPostList, setPostList] = useState([]);\n\n    return (\n      <Layout\n        keywords={\n          \"blog, emotional intelligence, mental health, emotional health\"\n        }\n        imageUrl=\"/img/aubbie-crystal-ball.png\"\n        imageAltText=\"Winter Hearth Studios Blog\"\n        url=\"https://winterhearth.co/blog\"\n        title=\"Blog\"\n        description=\"Your emotions are now your superpower— Welcome to the future. In the Winter Hearth Blog we go where others refuse to go. We seek out all truths – not just those that make us comfortable. Unlocking the greatest secrets and strengths of humanity wont be easy, but it will be worth it.\"\n      >\n        <BannerBlogItem\n          articleTitle=\"Pandemics and the Quest for Good News\"\n          articleDescription=\"In this world there will be troubles... And good news makes those troubles seem smaller, right?\"\n          articleLink=\"/blog/pandemics-and-good-news\"\n          imageUrl=\"/img/blog/good-news-banner.jpg\"\n          mobileimageUrl=\"\"\n        ></BannerBlogItem>\n        <section>\n          <div className=\"text-center\">\n            <h1 className=\"pt-60 pb-10\">Winter Hearth Blog</h1>\n            <Separator />\n            <SearchArea\n              setPostList={setPostList}\n              setSearchState={setSearchState}\n              posts={allBlogs}\n              type=\"blogs\"\n            />\n          </div>\n        </section>\n        <section style={{ marginTop: 90 }} className=\"post-content-area\">\n          <div className=\"container\">\n            <div className=\"row justify-content-center\">\n              <div name=\"searched-post-section\" className=\"col-lg-8 posts-list\">\n                {searchState !== \"\" && (\n                  <h3 className=\"pb-40\">Results for: {searchState}</h3>\n                )}\n                {searchState !== \"\" && filteredPostList.length === 0 && (\n                  <p>No posts matched this search</p>\n                )}\n                {searchState !== \"\" &&\n                  filteredPostList.map((edition, index) => {\n                    return (\n                      <SinglePostRow\n                        className=\"pb-20\"\n                        color={getBorderStyle(index)}\n                        key={edition.id}\n                        author={edition.author.name}\n                        date={edition.date}\n                        tags={edition.tags}\n                        articleTitle={edition.title}\n                        imageUrl={edition.imageUrl}\n                        articleLink={edition.articleLink}\n                        imageAltText={edition.imageAltText}\n                        excerpt={edition.description}\n                      ></SinglePostRow>\n                    );\n                  })}\n                {searchState === \"\" &&\n                  featuredPostList.map((edition, index) => {\n                    return (\n                      <SinglePostRow\n                        color={getBorderStyle(index)}\n                        key={edition.id}\n                        author={edition.author.name}\n                        date={edition.date}\n                        tags={edition.tags}\n                        articleTitle={edition.title}\n                        imageUrl={edition.imageUrl}\n                        articleLink={edition.articleLink}\n                        imageAltText={edition.imageAltText}\n                        excerpt={edition.description}\n                      ></SinglePostRow>\n                    );\n                  })}\n              </div>\n              <div className=\"col-lg-4 sidebar-widgets\">\n                <div className=\"widget-wrap\" style={{ margin: '0 12px' }}>\n                  <div className=\"single-sidebar-widget user-info-widget\">\n                    <img\n                      width=\"120\"\n                      style={{ borderRadius: 100 }}\n                      src=\"/img/profile-200p.jpg\"\n                      className=\"lazyload\"\n                      alt=\"Elgin Davis\"\n                    />\n                    <h4 className=\"pt-20\">Elgin Davis</h4>\n                    <p>Main Content Writer</p>\n                    <p style={{ textAlign: \"left\", margin: '10px 5%' }}>\n                      Elgin Davis is the creator of Winter Hearth Studios.\n                      Driven by a passionate spirit and boundless curiosity,\n                      Davis' work seeks to explore the depths of humanity and\n                      what it might look like to live a hyper-meaningful\n                      existence here on earth.\n                    </p>\n                  </div>\n                  <PopularPostColumn posts={featuredColumnList} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"recent-blog-area pt-60\">\n          <div className=\"container\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-md-8 pb-30 header-text text-center\">\n                <h1>From the Newsletter Archives</h1>\n                <h3 className=\"pb-20\">Epic Life Playbook Volume 2:<br/> Demystifying Mental Health</h3>\n                <p>\"Mental Health Monsters\" Series Artwork by Toby Allen</p>\n              </div>\n            </div>\n            <div className=\"row justify-content-center\">\n              {newsletterVolTwoList.map((edition, index) => {\n                return (\n                  <PostGridItem\n                    color={getBorderStyle(index)}\n                    key={edition.id}\n                    author={edition.author}\n                    date={edition.date}\n                    articleTitle={edition.title}\n                    tags={edition.tags}\n                    imageUrl={edition.imageUrl}\n                    articleLink={edition.articleLink}\n                    imageAltText={edition.imageAltText}\n                    excerpt={edition.description}\n                  ></PostGridItem>\n                );\n              })}\n            </div>\n          </div>\n        </section>\n        <section className=\"section-gap\">\n          <div className=\"text-center\">\n            <AniLink\n              paintDrip\n              direction=\"up\"\n              to=\"/newsletters/\"\n              className=\"primary-btn text-uppercase\"\n              name=\"see-all-newsletters-button\"\n            >\n              See All Newsletters\n            </AniLink>\n          </div>\n        </section>\n      </Layout>\n    );\n}\n\n// This gets the { data } property onto our props parameter, and here we query for all markdown files\nexport const query = graphql`\n    query {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            totalCount\n            edges {\n                node {\n                    id\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    ...PostInfo\n                }\n            }\n        }\n    }\n`;"],"sourceRoot":""}