{"version":3,"sources":["webpack:///./src/pages/newsletters.js"],"names":["edges","data","allMarkdownRemark","allPosts","transformPostQueryData","useState","searchState","setSearchState","filteredPostList","setPostList","allNewsletters","filter","post","contentType","hidden","newsletterVolTwoList","newsletterVolume","newsletterVolOneList","useEffect","document","title","className","style","margin","posts","type","marginTop","name","length","list","id","marginBottom","query"],"mappings":"8FAAA,8FAYe,sBAIR,IAFkBA,EAEnB,EAHJC,KACEC,kBAAqBF,MAGjBG,EAAWC,YAAuBJ,GADpC,EAEkCK,mBAAS,IAAxCC,EAFH,KAEgBC,EAFhB,OAGoCF,mBAAS,IAA1CG,EAHH,KAGqBC,EAHrB,KAKEC,EAAiBP,EAASQ,QAC9B,SAACC,GAAD,MAA+B,eAArBA,EAAKC,cAAgD,IAAhBD,EAAKE,UAGhDC,EAAuBL,EAAeC,QAC1C,SAACC,GAAD,OAAoC,IAA1BA,EAAKI,oBAEXC,EAAuBP,EAAeC,QAC1C,SAACC,GAAD,OAAoC,IAA1BA,EAAKI,oBAOjB,OAJAE,qBAAU,WACRC,SAASC,MAAQ,wCAChB,IAGD,kBAAC,IAAD,KACE,6BACEC,UAAU,yBAEV,yBAAKA,UAAU,IACb,yBACEC,MAAO,CAAEC,OAAQ,cACjBF,UAAU,kDAEV,yBAAKA,UAAU,qCAIrB,iCACE,yBAAKA,UAAU,eACb,wBAAIA,UAAU,eAAd,6BACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEZ,YAAaA,EACbF,eAAgBA,EAChBiB,MAAOd,EACPe,KAAK,kBAIX,6BAASH,MAAO,CAAEI,UAAW,IAAML,UAAU,qBAC3C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKM,KAAK,wBAAwBN,UAAU,uBACzB,KAAhBf,GACC,wBAAIe,UAAU,SAAd,gBAAoCf,GAErB,KAAhBA,GAAkD,IAA5BE,EAAiBoB,QACtC,2DAEe,KAAhBtB,GACC,kBAAC,IAAD,CAAmBuB,KAAMrB,QAMnC,6BAASa,UAAU,yBAAyBS,GAAG,YAC7C,yBAAKT,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,0CACb,0DAGA,wBAAIA,UAAU,qBACd,6BACA,uBAAGC,MAAO,CAAES,aAAc,IAA1B,2DAKJ,yBAAKV,UAAU,8BACb,kBAAC,IAAD,CAAkBQ,KAAMd,OAK9B,6BAASM,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,0CACb,2FAGA,wBAAIA,UAAU,qBACd,+BAGJ,yBAAKA,UAAU,8BACb,kBAAC,IAAD,CAAkBQ,KAAMZ,SAS7B,IAAMe,EAAK","file":"component---src-pages-newsletters-js-89a98b6db7d94c1aafec.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {\n  Layout,\n  Separator,\n  SearchArea,\n  PostGridItemList,\n  SinglePostRowList,\n} from \"../components\";\n\nimport { transformPostQueryData } from \"../utils\";\n\nexport default ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const allPosts = transformPostQueryData(edges);\n  const [searchState, setSearchState] = useState(\"\");\n  const [filteredPostList, setPostList] = useState([]);\n\n  const allNewsletters = allPosts.filter(\n    (post) => post.contentType === \"newsletter\" && post.hidden !== true\n  );\n\n  const newsletterVolTwoList = allNewsletters.filter(\n    (post) => post.newsletterVolume === 2\n  );\n  const newsletterVolOneList = allNewsletters.filter(\n    (post) => post.newsletterVolume === 1\n  );\n\n  useEffect(() => {\n    document.title = \"Newsletters | Winter Hearth Studios\";\n  }, []);\n\n  return (\n    <Layout>\n      <section\n        className=\"newsletter-hero-image\"\n      >\n        <div className=\"\">\n          <div\n            style={{ margin: \"40% 0 0 3%\" }}\n            className=\"row align-items-center justify-content-between\"\n          >\n            <div className=\"col-lg-8 col-md-8 banner-left\"></div>\n          </div>\n        </div>\n      </section>\n      <section>\n        <div className=\"text-center\">\n          <h1 className=\"pt-40 pb-10\">Winter Hearth Newsletters</h1>\n          <Separator />\n          <SearchArea\n            setPostList={setPostList}\n            setSearchState={setSearchState}\n            posts={allNewsletters}\n            type=\"newsletters\"\n          />\n        </div>\n      </section>\n      <section style={{ marginTop: 20 }} className=\"post-content-area\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div name=\"searched-post-section\" className=\"col-lg-8 posts-list\">\n              {searchState !== \"\" && (\n                <h3 className=\"pb-40\">Results for: {searchState}</h3>\n              )}\n              {searchState !== \"\" && filteredPostList.length === 0 && (\n                <p>No posts matched this search</p>\n              )}\n              {searchState !== \"\" && (\n                <SinglePostRowList list={filteredPostList} />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"recent-blog-area pt-60\" id=\"volume-2\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8 pb-30 header-text text-center\">\n              <h3>\n                Demystifying Mental Health\n              </h3>\n              <hr className=\"title-line mt-20\" />\n              <br />\n              <p style={{ marginBottom: 0 }}>\n                \"Mental Health Monsters\" Series Artwork by Toby Allen\n              </p>\n            </div>\n          </div>\n          <div className=\"row justify-content-center\">\n            <PostGridItemList list={newsletterVolTwoList} />\n          </div>\n        </div>\n      </section>\n\n      <section className=\"recent-blog-area pt-60\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8 pb-30 header-text text-center\">\n              <h3>\n                Epic Life Playbook Volume 1: Winter Hearth Creative Journal\n              </h3>\n              <hr className=\"title-line mt-20\" />\n              <br />\n            </div>\n          </div>\n          <div className=\"row justify-content-center\">\n            <PostGridItemList list={newsletterVolOneList} />\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\n// This gets the { data } property onto our props parameter, and here we query for all markdown files\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            featured\n            newsletterVolume\n            contentType\n            imageUrl\n            imageAltText\n            tags\n            keywords\n            description\n            author {\n              name\n              role\n              summary\n              imageUrl\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}